//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VMDebuggerViewExtension.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources_en_US_ {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources_en_US_() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VMDebuggerViewExtension.Properties.Resources.en-US.", typeof(Resources_en_US_).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * dat-gui JavaScript Controller Library
        /// * http://code.google.com/p/dat-gui
        /// *
        /// * Copyright 2011 Data Arts Team, Google Creative Lab
        /// *
        /// * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
        /// * you may not use this file except in compliance with the License.
        /// * You may obtain a copy of the License at
        /// *
        /// * http://www.apache.org/licenses/LICENSE-2.0
        /// */
        ///
        ///(function (global, factory) {
        ///	typeof exports === &apos;object&apos; &amp;&amp; typeof module !== &apos;undefined&apos; ? factory(exports) :
        ///	typeof def [rest of string was truncated]&quot;;.
        /// </summary>
        public static string assets_dat_gui_js {
            get {
                return ResourceManager.GetString("assets_dat_gui_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * @author qiao / https://github.com/qiao
        /// * @author mrdoob / http://mrdoob.com
        /// * @author alteredq / http://alteredqualia.com/
        /// * @author WestLangley / http://github.com/WestLangley
        /// * @author erich666 / http://erichaines.com
        /// */
        ///
        ///// This set of controls performs orbiting, dollying (zooming), and panning.
        ///// Unlike TrackballControls, it maintains the &quot;up&quot; direction object.up (+Y by default).
        /////
        /////    Orbit - left mouse / touch: one finger move
        /////    Zoom - middle mouse, or mousewheel / touc [rest of string was truncated]&quot;;.
        /// </summary>
        public static string assets_js_OrbitControls_js {
            get {
                return ResourceManager.GetString("assets_js_OrbitControls_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * @author mrdoob / http://mrdoob.com/
        /// * @author supereggbert / http://www.paulbrunt.co.uk/
        /// * @author julianwa / https://github.com/julianwa
        /// */
        ///
        ///THREE.RenderableObject = function () {
        ///
        ///	this.id = 0;
        ///
        ///	this.object = null;
        ///	this.z = 0;
        ///	this.renderOrder = 0;
        ///
        ///};
        ///
        /////
        ///
        ///THREE.RenderableFace = function () {
        ///
        ///	this.id = 0;
        ///
        ///	this.v1 = new THREE.RenderableVertex();
        ///	this.v2 = new THREE.RenderableVertex();
        ///	this.v3 = new THREE.RenderableVertex();
        ///
        ///	this.normalModel = new THREE.Vector [rest of string was truncated]&quot;;.
        /// </summary>
        public static string assets_js_Projector_js {
            get {
                return ResourceManager.GetString("assets_js_Projector_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // threejs.org/license
        ///(function(r,wb){&quot;object&quot;===typeof exports&amp;&amp;&quot;undefined&quot;!==typeof module?wb(exports):&quot;function&quot;===typeof define&amp;&amp;define.amd?define([&quot;exports&quot;],wb):(r=&quot;undefined&quot;!==typeof globalThis?globalThis:r||self,wb(r.THREE={}))})(this,function(r){function wb(){}function Oa(c,a,b,d,e,f,g,h,k,l){Object.defineProperty(this,&quot;id&quot;,{value:hk++});this.uuid=xa.generateUUID();this.name=&quot;&quot;;this.image=void 0!==c?c:Oa.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==a?a:Oa.DEFAULT_MAPPING;this.wrapS=void 0 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string assets_js_three_min_js {
            get {
                return ResourceManager.GetString("assets_js_three_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Viewport Settings
        ///function init() {
        ///    // THREE JS //
        ///    let frustumSize = 80;
        ///    let aspect = window.innerWidth / window.innerHeight;
        ///    perspectiveCamera = new THREE.PerspectiveCamera(45, aspect, 1, 10000);
        ///    orthoCamera = new THREE.OrthographicCamera( frustumSize * aspect / - 2, frustumSize * aspect / 2, frustumSize / 2, frustumSize / - 2, 1, 2000 );
        ///    camera = perspectiveCamera;
        ///
        ///    scene = new THREE.Scene();
        ///    scene.add(camera);
        ///
        ///    let ambientLight = new THREE.AmbientLight(0 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string assets_viewer_js {
            get {
                return ResourceManager.GetString("assets_viewer_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///    &lt;body&gt;
        ///        &lt;head&gt;
        ///            &lt;meta charset=&quot;utf-8&quot;&gt;
        ///            &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;
        ///            &lt;div id=&quot;gui-container&quot;&gt;&lt;/div&gt;
        ///        &lt;/head&gt;
        ///
        ///        &lt;script src=&quot;assests/js/three.min.js&quot;&gt;&lt;/script&gt;
        ///        &lt;script src=&quot;assests/js/OrbitControls.js&quot;&gt;&lt;/script&gt;
        ///        &lt;script src=&quot;assests/js/viewer.js&quot;&gt;&lt;/script&gt;
        ///        &lt;script src=&quot;assests/js/dat.gui.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///
        ///        &lt;script&gt;
        ///            // VIEWER //        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string index_html {
            get {
                return ResourceManager.GetString("index_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to body {
        ///    color: #bbbbbb;
        ///    font-family: &apos;Roboto&apos;, sans-serif;
        ///    font-size: 11px;
        ///    background-color: #2d2d2d;
        ///    margin: 0;
        ///    overflow: hidden;
        ///}
        ///
        ///#debugger {
        ///    position: fixed;
        ///    right: 0;
        ///    padding: 10px;
        ///}
        ///
        ///#bottom-menu {
        ///    position: fixed;
        ///    bottom: 0;
        ///    right: 0;
        ///    padding: 10px;
        ///}
        ///
        ///#gui-container {
        ///    position: fixed;
        ///    left: 0;
        ///    top: 0;
        ///    z-index: 0;
        ///}.
        /// </summary>
        public static string styles {
            get {
                return ResourceManager.GetString("styles", resourceCulture);
            }
        }
    }
}
